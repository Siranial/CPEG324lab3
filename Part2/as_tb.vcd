$date
  Thu Apr 28 12:33:26 2022
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module as_tb $end
$var reg 8 ! a[7:0] $end
$var reg 8 " b[7:0] $end
$var reg 1 # s $end
$var reg 8 $ y[7:0] $end
$scope module addsub $end
$var reg 8 % a[7:0] $end
$var reg 8 & b[7:0] $end
$var reg 1 ' s $end
$var reg 8 ( y[7:0] $end
$var reg 8 ) negb[7:0] $end
$var reg 8 * muxout[7:0] $end
$var reg 7 + carry[6:0] $end
$scope module tc $end
$var reg 8 , i[7:0] $end
$var reg 8 - o[7:0] $end
$var reg 7 . c[6:0] $end
$upscope $end
$scope module m2t1 $end
$var reg 8 / a[7:0] $end
$var reg 8 0 b[7:0] $end
$var reg 1 1 s $end
$var reg 8 2 y[7:0] $end
$upscope $end
$scope module fa0 $end
$var reg 1 3 a $end
$var reg 1 4 b $end
$var reg 1 5 cin $end
$var reg 1 6 o $end
$var reg 1 7 cout $end
$upscope $end
$scope module fa1 $end
$var reg 1 8 a $end
$var reg 1 9 b $end
$var reg 1 : cin $end
$var reg 1 ; o $end
$var reg 1 < cout $end
$upscope $end
$scope module fa2 $end
$var reg 1 = a $end
$var reg 1 > b $end
$var reg 1 ? cin $end
$var reg 1 @ o $end
$var reg 1 A cout $end
$upscope $end
$scope module fa3 $end
$var reg 1 B a $end
$var reg 1 C b $end
$var reg 1 D cin $end
$var reg 1 E o $end
$var reg 1 F cout $end
$upscope $end
$scope module fa4 $end
$var reg 1 G a $end
$var reg 1 H b $end
$var reg 1 I cin $end
$var reg 1 J o $end
$var reg 1 K cout $end
$upscope $end
$scope module fa5 $end
$var reg 1 L a $end
$var reg 1 M b $end
$var reg 1 N cin $end
$var reg 1 O o $end
$var reg 1 P cout $end
$upscope $end
$scope module fa6 $end
$var reg 1 Q a $end
$var reg 1 R b $end
$var reg 1 S cin $end
$var reg 1 T o $end
$var reg 1 U cout $end
$upscope $end
$scope module fa7 $end
$var reg 1 V a $end
$var reg 1 W b $end
$var reg 1 X cin $end
$var reg 1 Y o $end
$var reg 1 Z cout $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00000100 !
b00000010 "
0#
b00000110 $
b00000100 %
b00000010 &
0'
b00000110 (
b11111110 )
b00000010 *
b0000000 +
b00000010 ,
b11111110 -
b0000001 .
b00000010 /
b11111110 0
01
b00000010 2
03
04
05
06
07
08
19
0:
1;
0<
1=
0>
0?
1@
0A
0B
0C
0D
0E
0F
0G
0H
0I
0J
0K
0L
0M
0N
0O
0P
0Q
0R
0S
0T
0U
0V
0W
0X
0Y
0Z
#1000000
1#
b00000010 $
1'
b00000010 (
b11111110 *
b1111100 +
11
b11111110 2
1>
0@
1A
1C
1D
0E
1F
1H
1I
0J
1K
1M
1N
0O
1P
1R
1S
0T
1U
1W
1X
0Y
1Z
#2000000
b10000000 !
b10000000 "
0#
b00000000 $
b10000000 %
b10000000 &
0'
b00000000 (
b10000000 )
b10000000 *
b0000000 +
b10000000 ,
b10000000 -
b1111111 .
b10000000 /
b10000000 0
01
b10000000 2
09
0;
0=
0>
0@
0A
0C
0D
0F
0H
0I
0J
0K
0M
0N
0O
0P
0R
0S
0T
0U
1V
0X
0Y
#3000000
b10000001 "
1#
b11111111 $
b10000001 &
1'
b11111111 (
b01111111 )
b01111111 *
b10000001 ,
b01111111 -
b0000000 .
b10000001 /
b01111111 0
11
b01111111 2
14
16
19
1;
1>
1@
1C
1E
1H
1J
1M
1O
1R
1T
0W
1Y
0Z
#4000000
